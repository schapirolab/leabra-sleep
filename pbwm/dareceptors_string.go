// Code generated by "stringer -type=DaReceptors"; DO NOT EDIT.

package pbwm

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[D1R-0]
	_ = x[D2R-1]
	_ = x[DaReceptorsN-2]
}

const _DaReceptors_name = "D1RD2RDaReceptorsN"

var _DaReceptors_index = [...]uint8{0, 3, 6, 18}

func (i DaReceptors) String() string {
	if i < 0 || i >= DaReceptors(len(_DaReceptors_index)-1) {
		return "DaReceptors(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DaReceptors_name[_DaReceptors_index[i]:_DaReceptors_index[i+1]]
}

func (i *DaReceptors) FromString(s string) error {
	for j := 0; j < len(_DaReceptors_index)-1; j++ {
		if s == _DaReceptors_name[_DaReceptors_index[j]:_DaReceptors_index[j+1]] {
			*i = DaReceptors(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: DaReceptors")
}
